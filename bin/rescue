var async = require('async');
var prompt = require('prompt');
var crypto = require('crypto');
var config = require('../config');
var mongoclient = require('mongodb').MongoClient;
var db;
prompt.message = "> ".green;
prompt.delimiter = "";
prompt.start();

async.series([
		function (callback) {
			console.log("This script will create a rescue account for your system.\n");
			console.log("Database connection is required.");
			console.log("Current MongoDB URL: " + config.mongo.url + "\n");
			prompt.get(['Continue? y/n'], function (err, result) {
				if (!err && result && 'Continue? y/n' in result && result['Continue? y/n'] == 'y') {
					callback();
				} else {
					console.log("\n\nAborted");
					process.exit(code = 0);
				}
			});
		},
		function (callback) {
			mongoclient.connect(config.mongo.url, config.mongo_options, function (err, _db) {
				if (err) {
					console.log("\nCould not connect to the MongoDB. Please check config.js");
					console.log(err);
					process.exit(1);
				}
				console.log("\nConnected to MongoDB");
				db = _db;
				callback();
			});
		},
		function (callback) {
			db.collection('users').remove( { username : 'rescue' }, function () {
				callback();
			});
		},
		function (callback) {
			console.log("\nCreating rescue account\n");
			var md5 = crypto.createHash('md5');
			var password_md5 = md5.update(config.salt + '.rescue').digest('hex');			
			db.collection('users').insert({
					username: 'rescue',
					email: 'rescue@taracot.org',
					realname: 'System Rescue',
					status: 2,
					password: password_md5
				}, function (err) {
					if (err) {
						console.log("... failed");
						console.log(err);
						process.exit(1);
					}
					console.log("... success");
					callback();
				});
		}
	],
	function (err) {
		if (err) {
			console.log("\nRescue script failed");
			console.log(err);
			process.exit(1);
		}
		console.log("\nFinished");
		process.exit(code = 0);
	}
);