#!/usr/bin/env node

var program = require('commander');
var async = require('async');
var crypto = require('crypto');
var config = require('../config');
var mongoclient = require('mongodb').MongoClient;
var fs = require('fs');
var db;

program
  .version(config.taracotjs)
  .parse(process.argv);

var mongo_url = program.mongo || config.mongo.url;
var redis_host = program.redishost || config.redis.host;
var redis_port = program.redisport || config.redis.port;
var port = program.port || config.port;
var uid = program.uid || config.uid;
var gid = program.gid || config.gid;

async.series([
		function (callback) {
			console.log("Database connection is required.");
			console.log("Current MongoDB URL: " + mongo_url + "\n");
			if (program.silent) return callback();
			program.confirm('Continue? ', function(ok){
				if (ok) {
					callback();
				} else {
					console.log("\n\nAborted");
					process.exit(code = 0);
				}
			});
		},
		function (callback) {
			mongoclient.connect(mongo_url, config.mongo_options, function (err, _db) {
				if (err) {
					console.log("\nCould not connect to the MongoDB. Please check config.js");
					console.log(err);
					process.exit(1);
				}
				console.log("\nConnected to MongoDB\n");
				db = _db;
				callback();
			});
		},
		function (callback) {
			if (program.update) return callback();
			console.log("\nCreating default user account\n");
			var md5 = crypto.createHash('md5');
			var password_md5 = md5.update(config.salt + '.admin').digest('hex');
			for (var i = 1; i < 200; i++)
				db.collection('users').insert({
					username: 'test' + i,
					username_auth: 'test' + i,
					email: 'test' + i + '@taracot.org',
					realname: 'Test User ' + i,
					status: 1,
					regdate: Date.now(),
					password: password_md5
				}, function (err) {
				});
			callback();
		}
	],
	function (err) {
		if (err) {
			console.log("\nInstallation failed");
			console.log(err);
			process.exit(1);
		}
		console.log("\nFinished");
		process.exit(code = 0);
	}
);

/*

 Helper functions

*/

var dummy = function() {};

function generateId(lngth) {
	if (!lngth) {
		lngth = 16;
	}
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for( var i=0; i < lngth; i++ )
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    return text;
}

function ensure_indexes(col, ia, _opt, ow) {
	var opt = {
				unique: false,
				background: true,
				dropDups: false,
				w: 1
			  };
	if (_opt) opt = _opt;
	for (var i=0; i<ia.length; ia++) {
		var i1 = {};
		i[ia[i]] = 1;
		var i2 = {};
		i[ia[i]] = -1;
		db.ensureIndex(col, i1, opt, dummy);
		if (!ow) {
			db.ensureIndex(col, i2, opt, dummy);
		}
	}
}